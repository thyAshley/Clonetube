[{"C:\\Users\\ash\\Desktop\\Clonetube\\client\\src\\index.tsx":"1","C:\\Users\\ash\\Desktop\\Clonetube\\client\\src\\App.tsx":"2","C:\\Users\\ash\\Desktop\\Clonetube\\client\\src\\components\\Navbar\\index.tsx":"3","C:\\Users\\ash\\Desktop\\Clonetube\\client\\src\\components\\Sidebar\\index.tsx":"4","C:\\Users\\ash\\Desktop\\Clonetube\\client\\src\\pages\\Homepage\\index.tsx":"5","C:\\Users\\ash\\Desktop\\Clonetube\\client\\src\\pages\\SigninPage\\index.tsx":"6"},{"size":198,"mtime":1608085776042,"results":"7","hashOfConfig":"8"},{"size":428,"mtime":1608312925070,"results":"9","hashOfConfig":"8"},{"size":1332,"mtime":1608341173584,"results":"10","hashOfConfig":"8"},{"size":146,"mtime":1608205825530,"results":"11","hashOfConfig":"8"},{"size":465,"mtime":1608091749056,"results":"12","hashOfConfig":"8"},{"size":1135,"mtime":1608382404780,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1pw0qyy",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ash\\Desktop\\Clonetube\\client\\src\\index.tsx",[],["28","29"],"C:\\Users\\ash\\Desktop\\Clonetube\\client\\src\\App.tsx",[],"C:\\Users\\ash\\Desktop\\Clonetube\\client\\src\\components\\Navbar\\index.tsx",["30"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport RecorderIcon from '@material-ui/icons/Reorder';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AddIcon from '@material-ui/icons/AddBox';\r\n\r\nimport './navbar.scss';\r\n\r\nconst Navbar: React.FC = () => {\r\n  const [loggedIn, setLoggedIn] = useState<boolean>(false);\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"left\">\r\n        <button id=\"sidebar__toggle\">\r\n          <RecorderIcon className=\"icon\" />\r\n        </button>\r\n        <YouTubeIcon className=\"icon youtube\" />\r\n        <h1>CloneTube</h1>\r\n      </div>\r\n      <div className=\"center\">\r\n        <input className=\"searchbar\" placeholder=\"Search\" />\r\n        <button className=\"btn searchbar-button\">\r\n          <SearchIcon className=\"icon search\" />\r\n        </button>\r\n      </div>\r\n      <div className=\"right\">\r\n        <button className=\"btn addvideo\">\r\n          <AddIcon className=\"icon add\" />\r\n        </button>\r\n        {loggedIn ? (\r\n          <button className=\"btn profile\"></button>\r\n        ) : (\r\n          <Link to=\"/signin\">\r\n            <button className=\"btn signin\">Sign in</button>\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\ash\\Desktop\\Clonetube\\client\\src\\components\\Sidebar\\index.tsx",[],"C:\\Users\\ash\\Desktop\\Clonetube\\client\\src\\pages\\Homepage\\index.tsx",[],"C:\\Users\\ash\\Desktop\\Clonetube\\client\\src\\pages\\SigninPage\\index.tsx",["31"],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":11,"column":20,"nodeType":"38","messageId":"39","endLine":11,"endColumn":31},{"ruleId":"36","severity":1,"message":"40","line":12,"column":13,"nodeType":"38","messageId":"39","endLine":12,"endColumn":21},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"@typescript-eslint/no-unused-vars","'setLoggedIn' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]